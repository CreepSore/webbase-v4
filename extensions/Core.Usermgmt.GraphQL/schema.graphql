type Permission {
    id: Int!
    name: String!
    description: String
}

type PermissionGroup {
    id: Int!
    name: String!
    description: String
    permissions: [Permission]
}

type User {
    id: ID!
    username: String!
    email: String
    password: String
    isActive: Boolean!
    permissionGroup: PermissionGroup
    pseudo: Boolean!
}

type Query {
    me: User
    users: [User]
    userById(id: ID!): User
    permissionGroups: [PermissionGroup]
    permissionGroupById(id: ID!): PermissionGroup
    permissionGroupByName(name: String!): PermissionGroup
    permissions: [Permission]
    permissionById(id: ID!): Permission
    permissionByName(name: String!): Permission
}

type Mutation {
    loginByCredentials(username: String!, password: String!): String
    loginByApiKey(apiKey: String!): String
    logout: Boolean!
    deleteUser(id: ID!): Boolean!
    updateUser(id: ID!, username: String, email: String, password: String, isActive: Boolean, permissionGroupId: Int): Boolean!
    createUser(username: String!, email: String, password: String!, isActive: Boolean, permissionGroupId: Int): String!
    addPermissionToGroup(permissionGroupId: Int!, permissionId: Int!): Boolean!
    removePermissionFromGroup(permissionGroupId: Int!, permissionId: Int!): Boolean!
    createPermissionGroup(name: String!, description: String): Boolean!
}
